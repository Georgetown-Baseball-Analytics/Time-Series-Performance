geom_jitter()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_count()
ggplot(data = mpg) +
geom_boxplot(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
#source("Kishor import.R")
library(tidyverse)
d <- read_csv("data_clean.csv")
d <- d %>%
mutate(
strike = case_when(
pitch_result %in% c("Strike Swinging", "Strike Taken", "Foul", "BIP") ~ 1,
TRUE ~ 0
)) %>%
group_by(outing_id) %>%
mutate(
pitch_num_by_outing = row_number()) %>%
ungroup() %>%
mutate(
pitch_group_by_ten = (pitch_num_by_outing %/% 10) + 1,
pg_b = pitch_group_by_ten * 10,
pg_a = pg_b - 9,
pitch_group = str_c(pg_a, pg_b, sep = "-")
)
dd <- d %>%
group_by(pitch_group) %>%
summarize(
strike_pct = mean(strike),
count = n(),
)
pitcher <- unique(d$pitcher)
ggplot(dd) +
geom_point(aes(x = pitch_group, y = strike_pct)) +
geom_line(aes(x = pitch_group, y = strike_pct, group = 1)) +
scale_y_continuous(labels = scales::percent) +
labs(title = paste(pitcher, "Strike % by Pitch Count"), y = "Strike Percentage", x = "Pitch Number") +
theme_bw()
d <- d %>%
mutate(
strikeout = case_when(
non_bip_result %in% c("Strikeout,") ~ 1,
TRUE ~ 0
)) %>%
mutate(
walk = case_when(
non_bip_result %in% c("Walk,") ~ 1,
TRUE ~ 0
))
dk <- d %>%
group_by(pitch_group) %>%
summarize(
Outcome = sum(strikeout),
Name = "Strikeout"
)
dbb <- d %>%
group_by(pitch_group) %>%
summarize(
Outcome = sum(walk),
Name = "Walk"
)
ddd <- rbind(dk, dbb)
ggplot(ddd, aes(x = pitch_group, y = Outcome, group = Name, color = Name)) +
geom_point() +
geom_line()
#source("Kishor import.R")
library(tidyverse)
d <- read_csv("data_clean.csv")
d <- read_csv("data_clean.csv")
#source("Kishor import.R")
library(tidyverse)
d <- read_csv("data_clean.csv")
source("Kishor import.R")
library(tidyverse)
d <- d %>%
mutate(
strike = case_when(
pitch_result %in% c("Strike Swinging", "Strike Taken", "Foul", "BIP") ~ 1,
TRUE ~ 0
)) %>%
group_by(outing_id) %>%
mutate(
pitch_num_by_outing = row_number()) %>%
ungroup() %>%
mutate(
pitch_group_by_ten = (pitch_num_by_outing %/% 10) + 1,
pg_b = pitch_group_by_ten * 10,
pg_a = pg_b - 9,
pitch_group = str_c(pg_a, pg_b, sep = "-")
)
d <- read_csv("Baseball\data_clean.csv")
d <- read_csv("Baseball/data_clean.csv")
d <- d %>%
mutate(
strike = case_when(
pitch_result %in% c("Strike Swinging", "Strike Taken", "Foul", "BIP") ~ 1,
TRUE ~ 0
)) %>%
group_by(outing_id) %>%
mutate(
pitch_num_by_outing = row_number()) %>%
ungroup() %>%
mutate(
pitch_group_by_ten = (pitch_num_by_outing %/% 10) + 1,
pg_b = pitch_group_by_ten * 10,
pg_a = pg_b - 9,
pitch_group = str_c(pg_a, pg_b, sep = "-")
)
dd <- d %>%
group_by(pitch_group) %>%
summarize(
strike_pct = mean(strike),
count = n(),
)
pitcher <- unique(d$pitcher)
ggplot(dd) +
geom_point(aes(x = pitch_group, y = strike_pct)) +
geom_line(aes(x = pitch_group, y = strike_pct, group = 1)) +
scale_y_continuous(labels = scales::percent) +
labs(title = paste(pitcher, "Strike % by Pitch Count"), y = "Strike Percentage", x = "Pitch Number") +
theme_bw()
d <- d %>%
mutate(
strikeout = case_when(
non_bip_result %in% c("Strikeout,") ~ 1,
TRUE ~ 0
)) %>%
mutate(
walk = case_when(
non_bip_result %in% c("Walk,") ~ 1,
TRUE ~ 0
))
dk <- d %>%
group_by(pitch_group) %>%
summarize(
Outcome = sum(strikeout),
Name = "Strikeout"
)
dbb <- d %>%
group_by(pitch_group) %>%
summarize(
Outcome = sum(walk),
Name = "Walk"
)
ddd <- rbind(dk, dbb)
ggplot(ddd, aes(x = pitch_group, y = Outcome, group = Name, color = Name)) +
geom_point() +
geom_line()
View(d)
#source("Kishor import.R")
library(tidyverse)
d <- read_csv("../data/tonas_clean.csv")
d <- read_csv("../data/tonas_clean.csv")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
# Set up the game variables
score = 0
strikes = 0
balls = 0
outs = 0
inning = 1
max_innings = 9
# Set up the game loop
game_over = FALSE
while (!game_over) {
# Print the current game status
print(paste("Inning:", inning, "Score:", score, "Strikes:", strikes, "Balls:", balls, "Outs:", outs))
# Get the player's action
print("Choose between: swing, bunt, or steal:")
action = readline()
# Process the player's action
if (action == "swing") {
swing_result = sample(c("strike", "hit", "foul"), 1)
if (swing_result == "strike") {
strikes = strikes + 1
if (strikes == 3) {
outs = outs + 1
strikes = 0
balls = 0
}
} else if (swing_result == "hit") {
hit_result = sample(c("single", "double", "triple", "home run"), 1)
if (hit_result == "home run") {
score = score + 4
} else if (hit_result == "triple") {
score = score + 3
} else if (hit_result == "double") {
score = score + 2
} else if (hit_result == "single") {
score = score + 1
}
}
} else if (action == "bunt") {
bunt_result = sample(c("success", "failure"), 1)
if (bunt_result == "success") {
hit_result = sample(c("single", "double", "triple"), 1)
if (hit_result == "triple") {
score = score + 3
} else if (hit_result == "double") {
score = score + 2
} else if (hit_result == "single") {
score = score + 1
}
}
} else if (action == "steal") {
steal_result = sample(c("success", "failure"), 1)
if (steal_result == "success") {
score = score + 1
}
} else {
print("That is not a valid action. Please choose between swing, bunt, or steal.")
}
# Check if the game is over
if (inning > max_innings) {
game_over = TRUE
}
if (outs == 3) {
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
View(d)
setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
d <- import_data()
View(d)
d$Outs[416]==1
d$Outs[416]=1
d$Count[416]="0-0"
d$Outs[417]=2
d <- export_data(d)
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
View(d)
d <- import_data()
View(d)
d <- import_data()
View(d)
> d$Outs[416]=1
> d$Count[416]="0-0"
> d$Outs[417]=2
d$Outs[416]=1
d$Count[416]="0-0"
d$Outs[417]=2
View(d)
d <- clean_data_pipeline(d)
View(d)
source("sabermetric_analysis.R")
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
View(d)
d <- group_pitch_counts(d)
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
#setwd("C:/Users/rajmo/Documents/Baseball/Time-Series-Performance/scripts")
source("import_synergy_data.R")
source("sabermetric_analysis.R")
d <- read.csv(d)
d <- group_pitch_counts(d)
graph1 <- pitches_per_outing(d)
graph5 <- strikepct_pitchcount(d)
graph2 <- kandbbrate_pitchcount(d)
graph3 <- avg_and_obp_pitchcount(d)
graph4 <- slg_and_ops_pitchcount(d)
plot_list <- list(graph1, graph2, graph3, graph4, graph5)
file <- tempfile()
saveRDS(plot_list, file)
rmarkdown::render('rmarkdownfile.Rmd', params = list(file = file))
